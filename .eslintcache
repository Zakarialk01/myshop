[{"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Products.jsx":"4","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Product.jsx":"5","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\styles.js":"6","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\style.js":"8","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\styles.js":"9","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\lib\\commerce.js":"10","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\style.js":"12","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\style.js":"14","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\style.js":"16","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\AdressForm.jsx":"18","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Details.jsx":"20","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Review.jsx":"21"},{"size":147,"mtime":1607125632685,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607122102346,"results":"24","hashOfConfig":"23"},{"size":4062,"mtime":1607817180286,"results":"25","hashOfConfig":"23"},{"size":659,"mtime":1607818959363,"results":"26","hashOfConfig":"23"},{"size":1543,"mtime":1607818134278,"results":"27","hashOfConfig":"23"},{"size":783,"mtime":1607803366601,"results":"28","hashOfConfig":"23"},{"size":1685,"mtime":1607816931782,"results":"29","hashOfConfig":"23"},{"size":1650,"mtime":1607194003561,"results":"30","hashOfConfig":"23"},{"size":298,"mtime":1607193848956,"results":"31","hashOfConfig":"23"},{"size":136,"mtime":1607194968764,"results":"32","hashOfConfig":"23"},{"size":2721,"mtime":1607816293608,"results":"33","hashOfConfig":"23"},{"size":723,"mtime":1607815037296,"results":"34","hashOfConfig":"23"},{"size":1562,"mtime":1607260518230,"results":"35","hashOfConfig":"23"},{"size":349,"mtime":1607218398175,"results":"36","hashOfConfig":"23"},{"size":3461,"mtime":1607816405324,"results":"37","hashOfConfig":"23"},{"size":1210,"mtime":1607278881004,"results":"38","hashOfConfig":"23"},{"size":3214,"mtime":1607542781041,"results":"39","hashOfConfig":"23"},{"size":7707,"mtime":1607803627863,"results":"40","hashOfConfig":"23"},{"size":521,"mtime":1607285301912,"results":"41","hashOfConfig":"23"},{"size":3245,"mtime":1607819638703,"results":"42","hashOfConfig":"23"},{"size":1170,"mtime":1607541477465,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"svnxo6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\index.js",[],["92","93"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\reportWebVitals.js",[],["94","95"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\App.js",["96","97"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\Navbar.jsx",["98","99"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  Menu,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\n\r\nimport logo from \"../../assets/commerce.png\";\r\nimport useStyles from \"./style\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nconst Navbar = ({ totalItems }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n      <Toolbar>\r\n        {/*<Link to=\"/\">*/}\r\n        <Typography\r\n          component={Link}\r\n          to=\"/\"\r\n          variant=\"h6\"\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n        >\r\n          <img\r\n            src={logo}\r\n            alt=\"'ZakariaLoukili\"\r\n            height=\"25px\"\r\n            className={classes.image}\r\n          />{\" \"}\r\n          Zakaria's Shop\r\n        </Typography>\r\n        {/*} </Link>*/}\r\n        <div className={classes.grow} />\r\n        <div className={classes.button} />\r\n        {/*} <Link to=\"/Cart\">*/}\r\n        {location.pathname === \"/\" && ( // normally we use ? : but when we do && its appear only if the condition is true in the first place\r\n          <div>\r\n            <IconButton\r\n              component={Link}\r\n              to=\"/Cart\"\r\n              aria-label=\"Show cart items\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={totalItems} color=\"secondary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\styles.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\lib\\commerce.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\Cart.jsx",["100"],"import React from \"react\";\r\nimport { Container, Typography, Button, Grid } from \"@material-ui/core\";\r\nimport CartItem from \"./CartItem/CartItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useStyles from \"./style\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\n\r\nconst Cart = ({\r\n  cart,\r\n  onUpdateCart,\r\n  onRemoveFromCart,\r\n  onEmptyCart,\r\n  refresh,\r\n}) => {\r\n  const classes = useStyles();\r\n  const EmptyCart = () => {\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"0\",\r\n            top: \"50%\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: \"50px\",\r\n            fontWeight: 900,\r\n          }}\r\n        >\r\n          🛒 Your Basket is empty{\" \"}\r\n          <Button\r\n            component={Link}\r\n            to=\"/\"\r\n            size=\"large\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Fill the basket 🛒\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  const RenderCart = () => {\r\n    const emptyCart = () => {\r\n      onEmptyCart(cart.line_items.id);\r\n    };\r\n    return (\r\n      <Grid container justify=\"center\" spacing={8} gutterBottom>\r\n        {cart.line_items.map((item) => (\r\n          <Grid key={item.id} item xs={12} sm={6} md={6} lg={3}>\r\n            <CartItem\r\n              item={item}\r\n              Update={onUpdateCart}\r\n              Remove={onRemoveFromCart}\r\n            />\r\n          </Grid>\r\n        ))}\r\n\r\n        <div className={classes.cardDetails}>\r\n          <Typography variant=\"h5\">\r\n            {\" \"}\r\n            The total price is : {cart.subtotal.formatted_with_symbol}\r\n          </Typography>\r\n          <Button\r\n            onClick={emptyCart}\r\n            className={classes.emptyButton}\r\n            size=\"large\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Empty cart\r\n          </Button>\r\n          <Button\r\n            component={Link}\r\n            to=\"/Checkout\"\r\n            className={classes.checkoutButton}\r\n            size=\"large\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    );\r\n  };\r\n  if (!cart.line_items) return \"loading\";\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.toolbar} />\r\n      <Typography className={classes.title} variant=\"h2\" gutterBottom>\r\n        Your Shopping Cart\r\n      </Typography>\r\n      {!cart.line_items.length ? EmptyCart() : RenderCart()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\AdressForm.jsx",["101","102","103","104"],"import React, { useState, useEffect } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport CustomTextField from \"./CustomTextField\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst AdressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubDivisions, setShippingSubDivisions] = useState([]);\r\n  const [shippingSubDivision, setShippingSubDivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n  console.log(shippingOptions);\r\n  const countries =\r\n    /*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"] ... we use it cs countries isnét an array*/\r\n    Object.entries(shippingCountries).map(([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    }));\r\n  console.log(countries);\r\n\r\n  const subdivisions =\r\n    /*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"] ... we use it cs countries isnét an array*/\r\n    Object.entries(shippingSubDivisions).map(([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    }));\r\n  console.log(subdivisions);\r\n\r\n  //first we do a call for api to fetch shipping countrie after that in checkout.jsx we will create checkouttoken where we had the activestep\r\n  //after that we render the countries which shipping is available in line 83\r\n  const options = shippingOptions.map((shippingO) => ({\r\n    id: shippingO.id,\r\n    price: shippingO.price,\r\n    country: shippingO.country,\r\n    description: shippingO.description,\r\n  }));\r\n\r\n  //fetch countries\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[10]); //[2] to updated to morroco in the input\r\n  };\r\n\r\n  //fetch subdivisions in each country\r\n  const fetchSubDivisions = async (checkoutTokenId, countryCode) => {\r\n    const {\r\n      subdivisions,\r\n    } = await commerce.services.localeListShippingSubdivisions(\r\n      checkoutTokenId,\r\n      countryCode\r\n    );\r\n    setShippingSubDivisions(subdivisions);\r\n    setShippingSubDivision(Object.keys(subdivisions)[25]);\r\n  };\r\n\r\n  //fetchshippingoption with getshippigoptions documentation in commerce.js\r\n  const fetchShippingOptions = async (checkoutTokenId, country, region) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n\r\n    {\r\n      /* (solution in checkout.jsx)we get an error of checkoutToken.id (id is undefined to fix the problem we should add a condition in this line if we  have checkoutToken when we have the checkout token we render the  form) */\r\n    }\r\n    //fetchSubDivisions(); normally we should call fetchsubdivisions here but we cant call it immediately after fetchcountri dont have countries yet  so we create anathor useeffect\r\n  }, []);\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubDivisions(checkoutToken.id, shippingCountry);\r\n  }, [shippingCountry]);\r\n  useEffect(() => {\r\n    if (shippingSubDivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubDivision\r\n      );\r\n  }, [shippingSubDivision]);\r\n\r\n  const methods = useForm();\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" glutterBottom>\r\n        Shipping Adress\r\n      </Typography>\r\n\r\n      {/*for that payment form know the previous step we should do onsubmit which we add next function in checkout and newtStep backStep */}\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubDivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <CustomTextField required name=\"First Name\" label=\"First Name\" />\r\n            <CustomTextField\r\n              required\r\n              name=\"Adress Line 1\"\r\n              label=\"Adress line 1\"\r\n            />\r\n            <CustomTextField\r\n              required\r\n              name=\"Adress Line 2\"\r\n              label=\"Adress Line 2\"\r\n            />\r\n            <CustomTextField required name=\"City\" label=\"City\" />\r\n            <CustomTextField required name=\"Zip\" label=\"Zip / Postal code\" />\r\n            <CustomTextField required name=\"Email\" label=\"Email\" />\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingCountry}\r\n                onChange={(e) => {\r\n                  setShippingCountry(e.target.value);\r\n                }}\r\n              >\r\n                {/*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"]we use it cs countries isnét an array*/}\r\n\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {\" \"}\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Subdivisions</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingSubDivision}\r\n                onChange={(e) => {\r\n                  setShippingSubDivision(e.target.value);\r\n                }}\r\n              >\r\n                {/*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"]we use it cs countries isnét an array*/}\r\n\r\n                {subdivisions.map((region) => (\r\n                  <MenuItem key={region.id} value={region.id}>\r\n                    {\" \"}\r\n                    {region.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingOption}\r\n                onChange={(e) => {\r\n                  setShippingOption(e.target.value);\r\n                }}\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.description} - {option.price.formatted_with_symbol}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br></br>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button\r\n              component={Link}\r\n              to=\"/Cart\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Back to cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {\" \"}\r\n              {/*we add submit in form with reacthookform we do methode.handlesubmit...*/}\r\n              Next step\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdressForm;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Details.jsx",["105"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Review.jsx",["106"],"import React from \"react\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nconst Review = ({ cart }) => {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {cart.line_items.map((item) => (\r\n        <List disablePadding>\r\n          <ListItem style={{ padding: \"10px 0\" }} key={item.id}>\r\n            <ListItemText primary secondary={`Quantity: ${item.quantity}`} />\r\n\r\n            <Typography variant=\"body1\">{item.name}</Typography>\r\n          </ListItem>\r\n          <Typography variant=\"body1\">\r\n            Price :{item.line_total.formatted_with_symbol}\r\n          </Typography>\r\n        </List>\r\n      ))}\r\n      <br></br>\r\n      <Typography variant=\"subtitle1\">\r\n        Total Items : {cart.total_items}\r\n      </Typography>\r\n      <ListItem style={{ padding: \"10px 0\" }}>\r\n        <ListItemText primary=\"Total Price : \" />\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n          {cart.subtotal.formatted_with_symbol}\r\n        </Typography>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":50,"nodeType":"115","messageId":"116","endLine":7,"endColumn":54},{"ruleId":"117","severity":1,"message":"118","line":64,"column":6,"nodeType":"119","endLine":64,"endColumn":8,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"121","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":11},{"ruleId":"113","severity":1,"message":"122","line":8,"column":3,"nodeType":"115","messageId":"116","endLine":8,"endColumn":7},{"ruleId":"113","severity":1,"message":"123","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":82,"column":5,"nodeType":"126","messageId":"127","endLine":84,"endColumn":6},{"ruleId":"117","severity":1,"message":"128","line":86,"column":6,"nodeType":"119","endLine":86,"endColumn":8,"suggestions":"129"},{"ruleId":"117","severity":1,"message":"128","line":89,"column":6,"nodeType":"119","endLine":89,"endColumn":23,"suggestions":"130"},{"ruleId":"117","severity":1,"message":"131","line":97,"column":6,"nodeType":"119","endLine":97,"endColumn":27,"suggestions":"132"},{"ruleId":"113","severity":1,"message":"133","line":14,"column":8,"nodeType":"115","messageId":"116","endLine":14,"endColumn":18},{"ruleId":"113","severity":1,"message":"134","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":12},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'MenuItem' is defined but never used.","'Menu' is defined but never used.","'ShoppingBasketIcon' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["138"],["139"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["140"],"'IconButton' is defined but never used.","'CardMedia' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [cart]",{"range":"149","text":"150"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"151","text":"152"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry]",{"range":"153","text":"154"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubDivision]",{"range":"155","text":"156"},[1997,1999],"[cart]",[3422,3424],"[checkoutToken.id]",[3534,3551],"[checkoutToken.id, shippingCountry]",[3732,3753],"[checkoutToken.id, shippingCountry, shippingSubDivision]"]