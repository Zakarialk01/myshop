[{"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Products.jsx":"4","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Product.jsx":"5","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\styles.js":"6","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\style.js":"8","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\styles.js":"9","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\lib\\commerce.js":"10","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\style.js":"12","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\style.js":"14","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\style.js":"16","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\AdressForm.jsx":"18","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Details.jsx":"20","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Review.jsx":"21"},{"size":147,"mtime":1607125632685,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607122102346,"results":"24","hashOfConfig":"23"},{"size":2248,"mtime":1607287690557,"results":"25","hashOfConfig":"23"},{"size":657,"mtime":1607363032043,"results":"26","hashOfConfig":"23"},{"size":1476,"mtime":1607385107432,"results":"27","hashOfConfig":"23"},{"size":633,"mtime":1607392824226,"results":"28","hashOfConfig":"23"},{"size":1685,"mtime":1607363043071,"results":"29","hashOfConfig":"23"},{"size":1650,"mtime":1607194003561,"results":"30","hashOfConfig":"23"},{"size":298,"mtime":1607193848956,"results":"31","hashOfConfig":"23"},{"size":136,"mtime":1607194968764,"results":"32","hashOfConfig":"23"},{"size":2052,"mtime":1607283268446,"results":"33","hashOfConfig":"23"},{"size":760,"mtime":1607213852755,"results":"34","hashOfConfig":"23"},{"size":1562,"mtime":1607260518230,"results":"35","hashOfConfig":"23"},{"size":349,"mtime":1607218398175,"results":"36","hashOfConfig":"23"},{"size":2899,"mtime":1607437625891,"results":"37","hashOfConfig":"23"},{"size":1210,"mtime":1607278881004,"results":"38","hashOfConfig":"23"},{"size":437,"mtime":1607436448043,"results":"39","hashOfConfig":"23"},{"size":7705,"mtime":1607437792760,"results":"40","hashOfConfig":"23"},{"size":521,"mtime":1607285301912,"results":"41","hashOfConfig":"23"},{"size":3202,"mtime":1607391472974,"results":"42","hashOfConfig":"23"},{"size":1170,"mtime":1607439959201,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"svnxo6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\index.js",[],["96","97"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\reportWebVitals.js",[],["98","99"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\App.js",["100","101"],"import React from \"react\";\nimport Products from \"./components/Products/Products\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Cart from \"./components/Cart/Cart\";\nimport Checkout from \"./components/CheckoutForm/Checkout/Checkout\";\nimport { commerce } from \"./lib/commerce\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [products, setProducts] = React.useState([]);\n  const [cart, setCart] = React.useState({});\n\n  const getProduct = async () => {\n    const { data } = await commerce.products.list();\n    setProducts(data);\n    console.log(data);\n  };\n  //retrieve the cart at the start its empty in the second function we will add items to cart\n  const retrieveCart = async () => {\n    const retrieve = await commerce.cart.retrieve();\n    setCart(retrieve);\n    console.log(retrieve);\n  };\n  //to add items to the cart 7\n  const handleAddtoCart = async (productId, quantity) => {\n    const response = await commerce.cart.add(productId, quantity);\n    setCart(response.cart);\n    //to have items in the console\n    console.log(response.cart);\n  };\n  const updateCart = async (productId, quantity) => {\n    const update = await commerce.cart.update(productId, {quantity});\n    setCart(update.cart);\n  };\n  const removeFromCart = async (productId) => {\n    const remove = await commerce.cart.remove(productId);\n    setCart(remove.cart);\n  };\n  const emptyCart=async(productId)=>{\n    const empty= await commerce.cart.empty(productId)\n    setCart(empty.cart)\n  }\n  React.useEffect(() => {\n    getProduct();\n    retrieveCart();\n    //console.log(products)\n    console.log(cart);\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar totalItems={cart.total_items} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Products products={products} onAddtoCart={handleAddtoCart} />\n          </Route>\n\n          <Route exact path=\"/Cart\">\n            <Cart cart={cart} onUpdateCart={updateCart} onRemoveFromCart={removeFromCart} onEmptyCart={emptyCart} />\n          </Route>\n          <Route exact path=\"/Checkout\">\n            <Checkout cart={cart} /> \n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\Navbar.jsx",["102","103"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  Menu,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\n\r\nimport logo from \"../../assets/commerce.png\";\r\nimport useStyles from \"./style\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nconst Navbar = ({ totalItems }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n      <Toolbar>\r\n        {/*<Link to=\"/\">*/}\r\n        <Typography\r\n          component={Link}\r\n          to=\"/\"\r\n          variant=\"h6\"\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n        >\r\n          <img\r\n            src={logo}\r\n            alt=\"'ZakariaLoukili\"\r\n            height=\"25px\"\r\n            className={classes.image}\r\n          />{\" \"}\r\n          Zakaria's Shop\r\n        </Typography>\r\n        {/*} </Link>*/}\r\n        <div className={classes.grow} />\r\n        <div className={classes.button} />\r\n        {/*} <Link to=\"/Cart\">*/}\r\n        {location.pathname === \"/\" && ( // normally we use ? : but when we do && its appear only if the condition is true in the first place\r\n          <div>\r\n            <IconButton\r\n              component={Link}\r\n              to=\"/Cart\"\r\n              aria-label=\"Show cart items\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={totalItems} color=\"secondary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\styles.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\lib\\commerce.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["104"],"import React, { useEffect } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PaymentForm from \"../PaymentForm\";\r\nimport AdressForm from \"../AdressForm\";\r\nimport useStyles from \"./style\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\n\r\nconst Steps = [\"shipping adress\", \"Payement Details\"];\r\n\r\nconst Checkout = ({ cart }) => {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [checkoutToken, setCheckoutToken] = React.useState(null);\r\n  const [shippingData, setshippingData] = React.useState({});\r\n\r\n  //generate token\r\n\r\n  useEffect(() => {\r\n    const generateToken = async () => {\r\n      try {\r\n        const token = await commerce.checkout.generateToken(cart.id, {\r\n          type: \"cart\", // to find product (type:\"cart\")\r\n        });\r\n\r\n        setCheckoutToken(token);\r\n        //we should pass the cart as a prop from app.js\r\n        //we see the token in checkout\r\n\r\n        console.log(token);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    generateToken();\r\n  }, [cart]); //we should recall cart cause we generate token\r\n  //after that we passe checkoutToken to the adressform\r\n\r\n  const classes = useStyles();\r\n\r\n  const next = (data) => {\r\n    setshippingData(data);\r\n    nextStep();\r\n  };\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  // we will passe it as a prop in adresssform\r\n\r\n  const Confirmation = () => {\r\n    return <div>Confirmation</div>;\r\n  };\r\n  const Form = () => {\r\n    if (activeStep === 0) {\r\n      return <AdressForm checkoutToken={checkoutToken} next={next} />;\r\n    } else return <PaymentForm shippingData={shippingData} cart={cart} />;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.tootlbar}>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {Steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === Steps.length ? (\r\n            <Confirmation />\r\n          ) : (\r\n            checkoutToken && <Form />\r\n          )}{\" \"}\r\n          {/*weget an error of checkoutToken.id (id is undefined to fix the problem we should add a condition in this line if we  have checkoutToken when we have the checkout token we render the  form) */}\r\n        </Paper>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\PaymentForm.jsx",["105","106","107","108","109","110","111"],"import React from \"react\";\r\nimport { Divider, Typography, Button } from \"@material-ui/core\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  ElementsConsumer,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport Review from \"./Review\";\r\n\r\nconst PaymentForm = () => {\r\n  return (\r\n    <div>\r\n      Payment Form\r\n      <Review />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\AdressForm.jsx",["112","113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport CustomTextField from \"./CustomTextField\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst AdressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubDivisions, setShippingSubDivisions] = useState([]);\r\n  const [shippingSubDivision, setShippingSubDivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n  console.log(shippingOptions);\r\n  const countries =\r\n    /*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"] ... we use it cs countries isnét an array*/\r\n    Object.entries(shippingCountries).map(([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    }));\r\n  console.log(countries);\r\n\r\n  const subdivisions =\r\n    /*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"] ... we use it cs countries isnét an array*/\r\n    Object.entries(shippingSubDivisions).map(([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    }));\r\n  console.log(subdivisions);\r\n\r\n  //first we do a call for api to fetch shipping countrie after that in checkout.jsx we will create checkouttoken where we had the activestep\r\n  //after that we render the countries which shipping is available in line 83\r\n  const options = shippingOptions.map((shippingO) => ({\r\n    id: shippingO.id,\r\n    price: shippingO.price,\r\n    country: shippingO.country,\r\n    description: shippingO.description,\r\n  }));\r\n\r\n  //fetch countries\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[2]); //[2] to updated to morroco in the input\r\n  };\r\n\r\n  //fetch subdivisions in each country\r\n  const fetchSubDivisions = async (checkoutTokenId, countryCode) => {\r\n    const {\r\n      subdivisions,\r\n    } = await commerce.services.localeListShippingSubdivisions(\r\n      checkoutTokenId,\r\n      countryCode\r\n    );\r\n    setShippingSubDivisions(subdivisions);\r\n    setShippingSubDivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  //fetchshippingoption with getshippigoptions documentation in commerce.js\r\n  const fetchShippingOptions = async (checkoutTokenId, country, region) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n\r\n    {\r\n      /* (solution in checkout.jsx)we get an error of checkoutToken.id (id is undefined to fix the problem we should add a condition in this line if we  have checkoutToken when we have the checkout token we render the  form) */\r\n    }\r\n    //fetchSubDivisions(); normally we should call fetchsubdivisions here but we cant call it immediately after fetchcountri dont have countries yet  so we create anathor useeffect\r\n  }, []);\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubDivisions(checkoutToken.id, shippingCountry);\r\n  }, [shippingCountry]);\r\n  useEffect(() => {\r\n    if (shippingSubDivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubDivision\r\n      );\r\n  }, [shippingSubDivision]);\r\n\r\n  const methods = useForm();\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" glutterBottom>\r\n        Shipping Adress\r\n      </Typography>\r\n\r\n      {/*for that payment form know the previous step we should do onsubmit which we add next function in checkout and newtStep backStep */}\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubDivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <CustomTextField required name=\"First Name\" label=\"First Name\" />\r\n            <CustomTextField\r\n              required\r\n              name=\"Adress Line 1\"\r\n              label=\"Adress line 1\"\r\n            />\r\n            <CustomTextField\r\n              required\r\n              name=\"Adress Line 2\"\r\n              label=\"Adress Line 2\"\r\n            />\r\n            <CustomTextField required name=\"City\" label=\"City\" />\r\n            <CustomTextField required name=\"Zip\" label=\"Zip / Postal code\" />\r\n            <CustomTextField required name=\"Email\" label=\"Email\" />\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingCountry}\r\n                onChange={(e) => {\r\n                  setShippingCountry(e.target.value);\r\n                }}\r\n              >\r\n                {/*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"]we use it cs countries isnét an array*/}\r\n\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {\" \"}\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Subdivisions</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingSubDivision}\r\n                onChange={(e) => {\r\n                  setShippingSubDivision(e.target.value);\r\n                }}\r\n              >\r\n                {/*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"]we use it cs countries isnét an array*/}\r\n\r\n                {subdivisions.map((region) => (\r\n                  <MenuItem key={region.id} value={region.id}>\r\n                    {\" \"}\r\n                    {region.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingOption}\r\n                onChange={(e) => {\r\n                  setShippingOption(e.target.value);\r\n                }}\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.description} - {option.price.formatted_with_symbol}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br></br>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button\r\n              component={Link}\r\n              to=\"/Cart\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Back to cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {\" \"}\r\n              {/*we add submit in form with reacthookform we do methode.handlesubmit...*/}\r\n              Next step\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdressForm;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],["116","117"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Details.jsx",["118"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Draggable from \"react-draggable\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/Button\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./styles\";\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nconst Details = ({ product }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.Button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleOpen}\r\n      >\r\n        Details\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          {\" \"}\r\n          {/*productname*/}\r\n          {product.name}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Card className={classes.root}>\r\n              {product.assets.map((asset) => {\r\n                return (\r\n                  <CardMedia className={classes.mediaModal} image={asset.url} />\r\n                );\r\n              })}\r\n\r\n              <CardContent>\r\n                <div className={classes.cardContent}>\r\n                  <Typography variant=\"h6\" glutterBottom>\r\n                    {product.name}\r\n                  </Typography>\r\n                  <Typography variant=\"h5\">\r\n                    {product.price.formatted_with_symbol}\r\n                  </Typography>\r\n                </div>\r\n                <Typography\r\n                  dangerouslySetInnerHTML={{ __html: product.description }}\r\n                  body=\"h2\"\r\n                  color=\"textSecondary\"\r\n                />\r\n              </CardContent>\r\n              <CardActions\r\n                disableSpacing\r\n                className={classes.cardActions}\r\n              ></CardActions>\r\n            </Card>\r\n            {/*productiamge*/}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n            Return\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Review.jsx",["119"],"import React from \"react\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nconst Review = ({ cart }) => {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {cart.line_items.map((item) => (\r\n        <List disablePadding>\r\n          <ListItem style={{ padding: \"10px 0\" }} key={item.id}>\r\n            <ListItemText primary secondary={`Quantity: ${item.quantity}`} />\r\n\r\n            <Typography variant=\"body1\">{item.name}</Typography>\r\n          </ListItem>\r\n          <Typography variant=\"body1\">\r\n            Price :{item.line_total.formatted_with_symbol}\r\n          </Typography>\r\n        </List>\r\n      ))}\r\n      <br></br>\r\n      <Typography variant=\"subtitle1\">\r\n        Total Items : {cart.total_items}\r\n      </Typography>\r\n      <ListItem style={{ padding: \"10px 0\" }}>\r\n        <ListItemText primary=\"Total Price : \" />\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n          {cart.subtotal.formatted_with_symbol}\r\n        </Typography>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":7,"column":50,"nodeType":"128","messageId":"129","endLine":7,"endColumn":54},{"ruleId":"130","severity":1,"message":"131","line":48,"column":6,"nodeType":"132","endLine":48,"endColumn":8,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":7,"column":3,"nodeType":"128","messageId":"129","endLine":7,"endColumn":11},{"ruleId":"126","severity":1,"message":"135","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":7},{"ruleId":"126","severity":1,"message":"136","line":48,"column":9,"nodeType":"128","messageId":"129","endLine":48,"endColumn":17},{"ruleId":"126","severity":1,"message":"137","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"138","line":2,"column":19,"nodeType":"128","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"126","severity":1,"message":"139","line":2,"column":31,"nodeType":"128","messageId":"129","endLine":2,"endColumn":37},{"ruleId":"126","severity":1,"message":"140","line":4,"column":3,"nodeType":"128","messageId":"129","endLine":4,"endColumn":11},{"ruleId":"126","severity":1,"message":"141","line":5,"column":3,"nodeType":"128","messageId":"129","endLine":5,"endColumn":14},{"ruleId":"126","severity":1,"message":"142","line":6,"column":3,"nodeType":"128","messageId":"129","endLine":6,"endColumn":19},{"ruleId":"126","severity":1,"message":"143","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":82,"column":5,"nodeType":"146","messageId":"147","endLine":84,"endColumn":6},{"ruleId":"130","severity":1,"message":"148","line":86,"column":6,"nodeType":"132","endLine":86,"endColumn":8,"suggestions":"149"},{"ruleId":"130","severity":1,"message":"148","line":89,"column":6,"nodeType":"132","endLine":89,"endColumn":23,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"151","line":97,"column":6,"nodeType":"132","endLine":97,"endColumn":27,"suggestions":"152"},{"ruleId":"120","replacedBy":"153"},{"ruleId":"122","replacedBy":"154"},{"ruleId":"126","severity":1,"message":"155","line":14,"column":8,"nodeType":"128","messageId":"129","endLine":14,"endColumn":18},{"ruleId":"126","severity":1,"message":"156","line":7,"column":3,"nodeType":"128","messageId":"129","endLine":7,"endColumn":12},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'MenuItem' is defined but never used.","'Menu' is defined but never used.","'backStep' is assigned a value but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Elements' is defined but never used.","'CardElement' is defined but never used.","'ElementsConsumer' is defined but never used.","'loadStripe' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["160"],["161"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["162"],["157"],["158"],"'IconButton' is defined but never used.","'CardMedia' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [cart]",{"range":"171","text":"172"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"173","text":"174"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry]",{"range":"175","text":"176"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubDivision]",{"range":"177","text":"178"},[1652,1654],"[cart]",[3420,3422],"[checkoutToken.id]",[3532,3549],"[checkoutToken.id, shippingCountry]",[3730,3751],"[checkoutToken.id, shippingCountry, shippingSubDivision]"]