[{"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Products.jsx":"4","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Product.jsx":"5","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\styles.js":"6","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\style.js":"8","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\styles.js":"9","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\lib\\commerce.js":"10","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\style.js":"12","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\style.js":"14","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\style.js":"16","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\AdressForm.jsx":"18","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Details.jsx":"20","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Review.jsx":"21","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\Home.js":"22","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\base.js":"23"},{"size":147,"mtime":1607125632685,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1607122102346,"results":"26","hashOfConfig":"25"},{"size":4244,"mtime":1608476616199,"results":"27","hashOfConfig":"25"},{"size":1077,"mtime":1608478987759,"results":"28","hashOfConfig":"25"},{"size":1545,"mtime":1608477437687,"results":"29","hashOfConfig":"25"},{"size":686,"mtime":1608500116379,"results":"30","hashOfConfig":"25"},{"size":1700,"mtime":1608479271247,"results":"31","hashOfConfig":"25"},{"size":1654,"mtime":1608414484912,"results":"32","hashOfConfig":"25"},{"size":298,"mtime":1607193848956,"results":"33","hashOfConfig":"25"},{"size":136,"mtime":1608158752927,"results":"34","hashOfConfig":"25"},{"size":2795,"mtime":1608593834055,"results":"35","hashOfConfig":"25"},{"size":547,"mtime":1608155706939,"results":"36","hashOfConfig":"25"},{"size":1617,"mtime":1608080520622,"results":"37","hashOfConfig":"25"},{"size":443,"mtime":1608500821074,"results":"38","hashOfConfig":"25"},{"size":4472,"mtime":1608217815608,"results":"39","hashOfConfig":"25"},{"size":1210,"mtime":1607278881004,"results":"40","hashOfConfig":"25"},{"size":3185,"mtime":1608217399191,"results":"41","hashOfConfig":"25"},{"size":7646,"mtime":1608217686811,"results":"42","hashOfConfig":"25"},{"size":556,"mtime":1608159675640,"results":"43","hashOfConfig":"25"},{"size":3245,"mtime":1607819638703,"results":"44","hashOfConfig":"25"},{"size":1170,"mtime":1607541477465,"results":"45","hashOfConfig":"25"},{"size":11298,"mtime":1608644129080,"results":"46","hashOfConfig":"25"},{"size":393,"mtime":1608076946405,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"svnxo6",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\index.js",[],["102","103"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\reportWebVitals.js",[],["104","105"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\App.js",["106","107"],"import React, { useState } from \"react\";\nimport Products from \"./components/Products/Products\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Cart from \"./components/Cart/Cart\";\nimport Checkout from \"./components/CheckoutForm/Checkout/Checkout\";\nimport { commerce } from \"./lib/commerce\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport logo from \"./assets/commerce.png\";\nimport \"./index.css\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [order, setOrder] = useState({});\n\n  const [loading, setLoading] = useState(true);\n\n  const [errorMessage, seterrorMessage] = useState(\"\");\n\n  const getProduct = async () => {\n    const { data } = await commerce.products.list();\n    setProducts(data);\n    setLoading(false);\n    console.log(data);\n  };\n  //retrieve the cart at the start its empty in the second function we will add items to cart\n  const retrieveCart = async () => {\n    const retrieve = await commerce.cart.retrieve();\n    setCart(retrieve);\n    setLoading(false);\n    console.log(retrieve);\n  };\n  //to add items to the cart 7\n  const handleAddtoCart = async (productId, quantity) => {\n    const response = await commerce.cart.add(productId, quantity);\n    setCart(response.cart);\n    setLoading(false);\n    //to have items in the console\n    console.log(response.cart);\n  };\n  const updateCart = async (productId, quantity) => {\n    const update = await commerce.cart.update(productId, { quantity });\n    setCart(update.cart);\n    setLoading(false);\n  };\n  const removeFromCart = async (productId) => {\n    const remove = await commerce.cart.remove(productId);\n    setCart(remove.cart);\n    setLoading(false);\n  };\n  const emptyCart = async (productId) => {\n    const empty = await commerce.cart.empty(productId);\n    setCart(empty.cart);\n  };\n  React.useEffect(() => {\n    getProduct();\n    retrieveCart();\n    console.log(order);\n\n    //console.log(products)\n  }, []);\n\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.refresh();\n\n    setCart(newCart);\n    console.log(newCart);\n  };\n\n  const handleCapturedCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const incomingOrder = await commerce.checkout.capture(\n        checkoutTokenId,\n        newOrder\n      );\n      setOrder(incomingOrder);\n      refreshCart();\n    } catch (error) {\n      seterrorMessage(error.data.error.message);\n    }\n    //we will passing order and handlecapturedcheckout and errormessage as a props in checkout\n  };\n  if (loading)\n    return (\n      <div\n        style={{\n          position: \" absolute\",\n          maxWidth: \"45%\",\n          maxHeight: \"45%\",\n          top: \"50%\",\n          left: \"50%\",\n          overflow: \"visible\",\n        }}\n      >\n        <img\n          style={{\n            position: \"relative\",\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            marginTop: \"-50%\",\n            marginLeft: \"-50%\",\n          }}\n          src={logo}\n          alt=\"'ZakariaLoukili\"\n        />\n      </div>\n    );\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            {\" \"}\n            <Home />\n          </Route>\n          <Route exact path=\"/Products\">\n            <Navbar totalItems={cart.total_items} />\n            <Products products={products} onAddtoCart={handleAddtoCart} />\n          </Route>\n\n          <Route exact path=\"/Cart\">\n            <Navbar totalItems={cart.total_items} />\n            <Cart\n              cart={cart}\n              onUpdateCart={updateCart}\n              loading={loading}\n              onRemoveFromCart={removeFromCart}\n              onEmptyCart={emptyCart}\n            />\n          </Route>\n          <Route exact path=\"/Checkout\">\n            <Navbar totalItems={cart.total_items} />\n            <Checkout\n              cart={cart}\n              order={order}\n              loading={loading}\n              handleCapturedCheckout={handleCapturedCheckout}\n              errorMessage={errorMessage}\n              refresh={refreshCart}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\Navbar.jsx",["108","109"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  Menu,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\n\r\nimport logo from \"../../assets/commerce.png\";\r\nimport useStyles from \"./style\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nconst Navbar = ({ totalItems }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n      <Toolbar>\r\n        {/*<Link to=\"/\">*/}\r\n        <Typography\r\n          component={Link}\r\n          to=\"/Products\"\r\n          variant=\"h6\"\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n        >\r\n          <img\r\n            src={logo}\r\n            alt=\"'ZakariaLoukili\"\r\n            height=\"25px\"\r\n            className={classes.image}\r\n          />{\" \"}\r\n          Room of shoes\r\n        </Typography>\r\n        {/*} </Link>*/}\r\n        <div className={classes.grow} />\r\n        <div className={classes.button} />\r\n        {/*} <Link to=\"/Cart\">*/}\r\n        {location.pathname === \"/Products\" && ( // normally we use ? : but when we do && its appear only if the condition is true in the first place\r\n          <div>\r\n            <IconButton\r\n              component={Link}\r\n              to=\"/Cart\"\r\n              aria-label=\"Show cart items\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={totalItems} color=\"secondary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Navbar\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\styles.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\lib\\commerce.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\Cart.jsx",["110","111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Typography, Button, Grid } from \"@material-ui/core\";\r\nimport CartItem from \"./CartItem/CartItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useStyles from \"./style\";\r\nimport logo from \"../../assets/commerce.png\";\r\nimport \"./cart.css\";\r\nconst Cart = ({ cart, onUpdateCart, onRemoveFromCart, onEmptyCart }) => {\r\n  const classes = useStyles();\r\n  const EmptyCart = () => {\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"0\",\r\n            top: \"50%\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: \"50px\",\r\n\r\n            fontFamily: \"system-ui\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          Your Basket is empty{\" \"}\r\n          <Button\r\n            component={Link}\r\n            to=\"/Products\"\r\n            size=\"large\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Fill the basket 🛒\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  const RenderCart = () => {\r\n    const emptyCart = () => {\r\n      onEmptyCart(cart.line_items.id);\r\n    };\r\n\r\n    return (\r\n      <Grid container justify=\"center\" spacing={8} gutterBottom>\r\n        {cart.line_items.map((item) => (\r\n          <Grid key={item.id} item xs={12} sm={6} md={6} lg={3}>\r\n            <CartItem\r\n              item={item}\r\n              Update={onUpdateCart}\r\n              Remove={onRemoveFromCart}\r\n            />\r\n          </Grid>\r\n        ))}\r\n\r\n        <div className={classes.cardDetails}>\r\n          <Typography variant=\"h5\">\r\n            {\" \"}\r\n            The total price is :\r\n            <span className=\"h5\">\r\n              {\" \"}\r\n              {cart.subtotal.formatted_with_symbol}\r\n            </span>{\" \"}\r\n          </Typography>\r\n          <Button\r\n            onClick={emptyCart}\r\n            className={classes.emptyButton}\r\n            size=\"large\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Empty cart\r\n          </Button>\r\n          <Button\r\n            component={Link}\r\n            to=\"/Checkout\"\r\n            className={classes.checkoutButton}\r\n            size=\"large\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    );\r\n  };\r\n  if (!cart.line_items) return \"loading\";\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.toolbar} />\r\n      <h6 className=\"title\">Your Shopping Cart</h6>\r\n      {!cart.line_items.length ? EmptyCart() : RenderCart()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Cart\\CartItem\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Checkout\\style.js",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\AdressForm.jsx",["113","114","115","116"],"import React, { useState, useEffect } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport CustomTextField from \"./CustomTextField\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst AdressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubDivisions, setShippingSubDivisions] = useState([]);\r\n  const [shippingSubDivision, setShippingSubDivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n  console.log(shippingOptions);\r\n  const countries =\r\n    /*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"] ... we use it cs countries isnét an array*/\r\n    Object.entries(shippingCountries).map(([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    }));\r\n  console.log(countries);\r\n\r\n  const subdivisions =\r\n    /*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"] ... we use it cs countries isnét an array*/\r\n    Object.entries(shippingSubDivisions).map(([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    }));\r\n  console.log(subdivisions);\r\n\r\n  //first we do a call for api to fetch shipping countrie after that in checkout.jsx we will create checkouttoken where we had the activestep\r\n  //after that we render the countries which shipping is available in line 83\r\n  const options = shippingOptions.map((shippingO) => ({\r\n    id: shippingO.id,\r\n    price: shippingO.price,\r\n    country: shippingO.country,\r\n    description: shippingO.description,\r\n  }));\r\n\r\n  //fetch countries\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)); //[2] to updated to morroco in the input\r\n  };\r\n\r\n  //fetch subdivisions in each country\r\n  const fetchSubDivisions = async (checkoutTokenId, countryCode) => {\r\n    const {\r\n      subdivisions,\r\n    } = await commerce.services.localeListShippingSubdivisions(\r\n      checkoutTokenId,\r\n      countryCode\r\n    );\r\n    setShippingSubDivisions(subdivisions);\r\n    setShippingSubDivision(Object.keys(subdivisions));\r\n  };\r\n\r\n  //fetchshippingoption with getshippigoptions documentation in commerce.js\r\n  const fetchShippingOptions = async (checkoutTokenId, country, region) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n\r\n    {\r\n      /* (solution in checkout.jsx)we get an error of checkoutToken.id (id is undefined to fix the problem we should add a condition in this line if we  have checkoutToken when we have the checkout token we render the  form) */\r\n    }\r\n    //fetchSubDivisions(); normally we should call fetchsubdivisions here but we cant call it immediately after fetchcountri dont have countries yet  so we create anathor useeffect\r\n  }, []);\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubDivisions(checkoutToken.id, shippingCountry);\r\n  }, [shippingCountry]);\r\n  useEffect(() => {\r\n    if (shippingSubDivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubDivision\r\n      );\r\n  }, [shippingSubDivision]);\r\n\r\n  const methods = useForm();\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" glutterBottom>\r\n        Shipping Adress\r\n      </Typography>\r\n\r\n      {/*for that payment form know the previous step we should do onsubmit which we add next function in checkout and newtStep backStep */}\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubDivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <CustomTextField required name=\"firstName\" label=\"First Name\" />\r\n            <CustomTextField required name=\"lastName\" label=\"Last name\" />\r\n            <CustomTextField required name=\"adress1\" label=\"Adress line 1\" />\r\n            <CustomTextField required name=\"adress2\" label=\"Adress Line 2\" />\r\n            <CustomTextField required name=\"city\" label=\"City\" />\r\n            <CustomTextField required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <CustomTextField required name=\"email\" label=\"Email\" />\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingCountry}\r\n                onChange={(e) => {\r\n                  setShippingCountry(e.target.value);\r\n                }}\r\n              >\r\n                {/*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"]we use it cs countries isnét an array*/}\r\n\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {\" \"}\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Subdivisions</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingSubDivision}\r\n                onChange={(e) => {\r\n                  setShippingSubDivision(e.target.value);\r\n                }}\r\n              >\r\n                {/*object . entries will give uskeys and values  as array of array [\"ma\",\"maroc\"]we use it cs countries isnét an array*/}\r\n\r\n                {subdivisions.map((region) => (\r\n                  <MenuItem key={region.id} value={region.id}>\r\n                    {\" \"}\r\n                    {region.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={6} xm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={shippingOption}\r\n                onChange={(e) => {\r\n                  setShippingOption(e.target.value);\r\n                }}\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.description} - {option.price.formatted_with_symbol}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br></br>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button\r\n              component={Link}\r\n              to=\"/Cart\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Back to cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {\" \"}\r\n              {/*we add submit in form with reacthookform we do methode.handlesubmit...*/}\r\n              Next step\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdressForm;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\Products\\Product\\Details.jsx",["117"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Draggable from \"react-draggable\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/Button\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nconst Details = ({ product }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.Button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleOpen}\r\n      >\r\n        Details\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          {\" \"}\r\n          {/*productname*/}\r\n          {product.name}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Card className={classes.root}>\r\n              {product.assets.map((asset) => {\r\n                return (\r\n                  <CardMedia className={classes.mediaModal} image={asset.url} />\r\n                );\r\n              })}{\" \"}\r\n              <CardContent>\r\n                <div className={classes.cardContent}>\r\n                  <Typography variant=\"h6\" glutterBottom>\r\n                    {product.name}\r\n                  </Typography>\r\n                  <Typography variant=\"h5\">\r\n                    {product.price.formatted_with_symbol}\r\n                  </Typography>\r\n                </div>\r\n                <h4>Description</h4>\r\n                <Typography\r\n                  dangerouslySetInnerHTML={{ __html: product.description }}\r\n                  body=\"h2\"\r\n                  color=\"textSecondary\"\r\n                />\r\n              </CardContent>\r\n              <CardActions\r\n                disableSpacing\r\n                className={classes.cardActions}\r\n              ></CardActions>\r\n            </Card>\r\n            {/*productiamge*/}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n            Return\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\components\\CheckoutForm\\Review.jsx",["118"],"import React from \"react\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nconst Review = ({ cart }) => {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {cart.line_items.map((item) => (\r\n        <List disablePadding>\r\n          <ListItem style={{ padding: \"10px 0\" }} key={item.id}>\r\n            <ListItemText primary secondary={`Quantity: ${item.quantity}`} />\r\n\r\n            <Typography variant=\"body1\">{item.name}</Typography>\r\n          </ListItem>\r\n          <Typography variant=\"body1\">\r\n            Price :{item.line_total.formatted_with_symbol}\r\n          </Typography>\r\n        </List>\r\n      ))}\r\n      <br></br>\r\n      <Typography variant=\"subtitle1\">\r\n        Total Items : {cart.total_items}\r\n      </Typography>\r\n      <ListItem style={{ padding: \"10px 0\" }}>\r\n        <ListItemText primary=\"Total Price : \" />\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n          {cart.subtotal.formatted_with_symbol}\r\n        </Typography>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\Home.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"C:\\Users\\admin\\Desktop\\React\\ecommercejs\\src\\base.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":8,"column":50,"nodeType":"163","messageId":"164","endLine":8,"endColumn":54},{"ruleId":"165","severity":1,"message":"166","line":63,"column":6,"nodeType":"167","endLine":63,"endColumn":8,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"169","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":11},{"ruleId":"161","severity":1,"message":"170","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":8,"endColumn":7},{"ruleId":"161","severity":1,"message":"171","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"172","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"173","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":12},{"ruleId":"174","severity":1,"message":"175","line":82,"column":5,"nodeType":"176","messageId":"177","endLine":84,"endColumn":6},{"ruleId":"165","severity":1,"message":"178","line":86,"column":6,"nodeType":"167","endLine":86,"endColumn":8,"suggestions":"179"},{"ruleId":"165","severity":1,"message":"178","line":89,"column":6,"nodeType":"167","endLine":89,"endColumn":23,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"181","line":97,"column":6,"nodeType":"167","endLine":97,"endColumn":27,"suggestions":"182"},{"ruleId":"161","severity":1,"message":"183","line":14,"column":8,"nodeType":"163","messageId":"164","endLine":14,"endColumn":18},{"ruleId":"161","severity":1,"message":"184","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":12},{"ruleId":"161","severity":1,"message":"185","line":29,"column":10,"nodeType":"163","messageId":"164","endLine":29,"endColumn":16},{"ruleId":"161","severity":1,"message":"186","line":35,"column":9,"nodeType":"163","messageId":"164","endLine":35,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":85,"column":15,"nodeType":"189","endLine":85,"endColumn":46},{"ruleId":"190","severity":1,"message":"191","line":90,"column":19,"nodeType":"189","endLine":90,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":127,"column":15,"nodeType":"189","endLine":127,"endColumn":33},{"ruleId":"187","severity":1,"message":"188","line":139,"column":13,"nodeType":"189","endLine":139,"endColumn":49},{"ruleId":"187","severity":1,"message":"188","line":147,"column":13,"nodeType":"189","endLine":151,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":160,"column":13,"nodeType":"189","endLine":160,"endColumn":48},{"ruleId":"187","severity":1,"message":"188","line":169,"column":13,"nodeType":"189","endLine":169,"endColumn":46},{"ruleId":"187","severity":1,"message":"188","line":177,"column":13,"nodeType":"189","endLine":177,"endColumn":66},{"ruleId":"187","severity":1,"message":"188","line":186,"column":13,"nodeType":"189","endLine":186,"endColumn":72},{"ruleId":"187","severity":1,"message":"188","line":200,"column":17,"nodeType":"189","endLine":200,"endColumn":56},{"ruleId":"192","severity":1,"message":"193","line":206,"column":21,"nodeType":"194","endLine":206,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":256,"column":17,"nodeType":"194","endLine":256,"endColumn":33},{"ruleId":"195","severity":1,"message":"196","line":257,"column":17,"nodeType":"194","endLine":257,"endColumn":34},{"ruleId":"187","severity":1,"message":"188","line":269,"column":15,"nodeType":"189","endLine":269,"endColumn":35},{"ruleId":"187","severity":1,"message":"188","line":272,"column":15,"nodeType":"189","endLine":272,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":275,"column":15,"nodeType":"189","endLine":275,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":278,"column":15,"nodeType":"189","endLine":278,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":290,"column":19,"nodeType":"189","endLine":290,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":293,"column":19,"nodeType":"189","endLine":293,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":296,"column":19,"nodeType":"189","endLine":296,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":299,"column":19,"nodeType":"189","endLine":299,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":307,"column":19,"nodeType":"189","endLine":307,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":310,"column":19,"nodeType":"189","endLine":310,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":313,"column":19,"nodeType":"189","endLine":313,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":316,"column":19,"nodeType":"189","endLine":316,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":319,"column":19,"nodeType":"189","endLine":319,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":327,"column":19,"nodeType":"189","endLine":327,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":330,"column":19,"nodeType":"189","endLine":330,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":333,"column":19,"nodeType":"189","endLine":333,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":336,"column":19,"nodeType":"189","endLine":336,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":343,"column":17,"nodeType":"189","endLine":343,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":346,"column":17,"nodeType":"189","endLine":346,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":349,"column":17,"nodeType":"189","endLine":349,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":352,"column":17,"nodeType":"189","endLine":352,"endColumn":29},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],["197"],["198"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'MenuItem' is defined but never used.","'Menu' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'logo' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["200"],["201"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["202"],"'IconButton' is defined but never used.","'CardMedia' is defined but never used.","'loader' is assigned a value but never used.","'clickHandler' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react/jsx-no-duplicate-props","No duplicate props allowed","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [order]",{"range":"211","text":"212"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"213","text":"214"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry]",{"range":"215","text":"216"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubDivision]",{"range":"217","text":"218"},[2022,2024],"[order]",[3414,3416],"[checkoutToken.id]",[3526,3543],"[checkoutToken.id, shippingCountry]",[3724,3745],"[checkoutToken.id, shippingCountry, shippingSubDivision]"]